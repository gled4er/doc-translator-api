//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TranslationAssistant.TranslationServices.Core.CtfReportingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTranslation", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    [System.SerializableAttribute()]
    public partial class UserTranslation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string UriField;
        
        private string UserField;
        
        private string FromField;
        
        private string ToField;
        
        private int RatingField;
        
        private string OriginalTextField;
        
        private string TranslatedTextField;
        
        private System.DateTime CreatedDateUtcField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string OriginalText {
            get {
                return this.OriginalTextField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTextField, value) != true)) {
                    this.OriginalTextField = value;
                    this.RaisePropertyChanged("OriginalText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public string TranslatedText {
            get {
                return this.TranslatedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedTextField, value) != true)) {
                    this.TranslatedTextField = value;
                    this.RaisePropertyChanged("TranslatedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime CreatedDateUtc {
            get {
                return this.CreatedDateUtcField;
            }
            set {
                if ((this.CreatedDateUtcField.Equals(value) != true)) {
                    this.CreatedDateUtcField = value;
                    this.RaisePropertyChanged("CreatedDateUtc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTranslationCount", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    [System.SerializableAttribute()]
    public partial class UserTranslationCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string UriField;
        
        private string UserField;
        
        private string FromField;
        
        private string ToField;
        
        private int RatingField;
        
        private int CountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAuthority", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    [System.SerializableAttribute()]
    public partial class UserAuthority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string UserField;
        
        private byte AuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public byte Authority {
            get {
                return this.AuthorityField;
            }
            set {
                if ((this.AuthorityField.Equals(value) != true)) {
                    this.AuthorityField = value;
                    this.RaisePropertyChanged("Authority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.microsofttranslator.com/V2", ConfigurationName="CtfReportingService.CtfReportingService")]
    public interface CtfReportingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslations", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslationsResp" +
            "onse")]
        TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslation[] GetUserTranslations(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslations", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslationsResp" +
            "onse")]
        System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslation[]> GetUserTranslationsAsync(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslationCount" +
            "s", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslationCount" +
            "sResponse")]
        TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslationCount[] GetUserTranslationCounts(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslationCount" +
            "s", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserTranslationCount" +
            "sResponse")]
        System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslationCount[]> GetUserTranslationCountsAsync(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/CreateUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/CreateUserAuthorityResp" +
            "onse")]
        void CreateUserAuthority(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/CreateUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/CreateUserAuthorityResp" +
            "onse")]
        System.Threading.Tasks.Task CreateUserAuthorityAsync(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthorityRespons" +
            "e")]
        TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority GetUserAuthority(string appId, string user, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthorityRespons" +
            "e")]
        System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority> GetUserAuthorityAsync(string appId, string user, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthorities", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthoritiesRespo" +
            "nse")]
        TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority[] GetUserAuthorities(string appId, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthorities", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/GetUserAuthoritiesRespo" +
            "nse")]
        System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority[]> GetUserAuthoritiesAsync(string appId, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/DeleteUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/DeleteUserAuthorityResp" +
            "onse")]
        void DeleteUserAuthority(string appId, string user, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/DeleteUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/DeleteUserAuthorityResp" +
            "onse")]
        System.Threading.Tasks.Task DeleteUserAuthorityAsync(string appId, string user, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/UpdateUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/UpdateUserAuthorityResp" +
            "onse")]
        void UpdateUserAuthority(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string logcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/UpdateUserAuthority", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/UpdateUserAuthorityResp" +
            "onse")]
        System.Threading.Tasks.Task UpdateUserAuthorityAsync(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string logcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/SubmitTranslation", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/SubmitTranslationRespon" +
            "se")]
        void SubmitTranslation(string appId, string source, string target, string from, string to, string category, short rating, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/SubmitTranslation", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/SubmitTranslationRespon" +
            "se")]
        System.Threading.Tasks.Task SubmitTranslationAsync(string appId, string source, string target, string from, string to, string category, short rating, string userState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/TransferSiteAppId", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/TransferSiteAppIdRespon" +
            "se")]
        bool TransferSiteAppId(string appid, string siteUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/CtfReportingService/TransferSiteAppId", ReplyAction="http://api.microsofttranslator.com/V2/CtfReportingService/TransferSiteAppIdRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> TransferSiteAppIdAsync(string appid, string siteUrl);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CtfReportingServiceChannel : TranslationAssistant.TranslationServices.Core.CtfReportingService.CtfReportingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CtfReportingServiceClient : System.ServiceModel.ClientBase<TranslationAssistant.TranslationServices.Core.CtfReportingService.CtfReportingService>, TranslationAssistant.TranslationServices.Core.CtfReportingService.CtfReportingService {
        
        public CtfReportingServiceClient() {
        }
        
        public CtfReportingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CtfReportingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CtfReportingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CtfReportingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslation[] GetUserTranslations(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations) {
            return base.Channel.GetUserTranslations(appId, uriPrefix, from, to, minRating, maxRating, user, category, minDateUtc, maxDateUtc, skip, take, aggregateTranslations);
        }
        
        public System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslation[]> GetUserTranslationsAsync(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations) {
            return base.Channel.GetUserTranslationsAsync(appId, uriPrefix, from, to, minRating, maxRating, user, category, minDateUtc, maxDateUtc, skip, take, aggregateTranslations);
        }
        
        public TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslationCount[] GetUserTranslationCounts(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations) {
            return base.Channel.GetUserTranslationCounts(appId, uriPrefix, from, to, minRating, maxRating, user, category, minDateUtc, maxDateUtc, skip, take, aggregateTranslations);
        }
        
        public System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserTranslationCount[]> GetUserTranslationCountsAsync(string appId, string uriPrefix, string from, string to, System.Nullable<int> minRating, System.Nullable<int> maxRating, string user, string category, System.Nullable<System.DateTime> minDateUtc, System.Nullable<System.DateTime> maxDateUtc, System.Nullable<int> skip, System.Nullable<int> take, System.Nullable<bool> aggregateTranslations) {
            return base.Channel.GetUserTranslationCountsAsync(appId, uriPrefix, from, to, minRating, maxRating, user, category, minDateUtc, maxDateUtc, skip, take, aggregateTranslations);
        }
        
        public void CreateUserAuthority(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string userState) {
            base.Channel.CreateUserAuthority(appId, authority, userState);
        }
        
        public System.Threading.Tasks.Task CreateUserAuthorityAsync(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string userState) {
            return base.Channel.CreateUserAuthorityAsync(appId, authority, userState);
        }
        
        public TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority GetUserAuthority(string appId, string user, string userState) {
            return base.Channel.GetUserAuthority(appId, user, userState);
        }
        
        public System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority> GetUserAuthorityAsync(string appId, string user, string userState) {
            return base.Channel.GetUserAuthorityAsync(appId, user, userState);
        }
        
        public TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority[] GetUserAuthorities(string appId, string userState) {
            return base.Channel.GetUserAuthorities(appId, userState);
        }
        
        public System.Threading.Tasks.Task<TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority[]> GetUserAuthoritiesAsync(string appId, string userState) {
            return base.Channel.GetUserAuthoritiesAsync(appId, userState);
        }
        
        public void DeleteUserAuthority(string appId, string user, string userState) {
            base.Channel.DeleteUserAuthority(appId, user, userState);
        }
        
        public System.Threading.Tasks.Task DeleteUserAuthorityAsync(string appId, string user, string userState) {
            return base.Channel.DeleteUserAuthorityAsync(appId, user, userState);
        }
        
        public void UpdateUserAuthority(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string logcontext) {
            base.Channel.UpdateUserAuthority(appId, authority, logcontext);
        }
        
        public System.Threading.Tasks.Task UpdateUserAuthorityAsync(string appId, TranslationAssistant.TranslationServices.Core.CtfReportingService.UserAuthority authority, string logcontext) {
            return base.Channel.UpdateUserAuthorityAsync(appId, authority, logcontext);
        }
        
        public void SubmitTranslation(string appId, string source, string target, string from, string to, string category, short rating, string userState) {
            base.Channel.SubmitTranslation(appId, source, target, from, to, category, rating, userState);
        }
        
        public System.Threading.Tasks.Task SubmitTranslationAsync(string appId, string source, string target, string from, string to, string category, short rating, string userState) {
            return base.Channel.SubmitTranslationAsync(appId, source, target, from, to, category, rating, userState);
        }
        
        public bool TransferSiteAppId(string appid, string siteUrl) {
            return base.Channel.TransferSiteAppId(appid, siteUrl);
        }
        
        public System.Threading.Tasks.Task<bool> TransferSiteAppIdAsync(string appid, string siteUrl) {
            return base.Channel.TransferSiteAppIdAsync(appid, siteUrl);
        }
    }
}
